---
version: 2.1

orbs:
  # For Installing Browsers
  browser-tools: circleci/browser-tools@0.1.3
  # For Testing on windows
  win: circleci/windows@2.4.0
  # post to slack
  slack: circleci/slack@3.4.2

_refs:
  defaults: &defaults
    working_directory: ~/lightning-language-server
    docker:
      - image: circleci/node:lts
  ssh-config: &ssh-config
    fingerprints:
      - "e4:06:a5:d3:f8:cf:25:5d:7b:e9:7a:4b:71:93:f9:6e"
  gh-config: &gh-config
    name: Configuring GitHub
    command: |
      git config credential.helper 'cache --timeout=120'
      git config user.email "$GH_EMAIL"
      git config user.name "Release Bot"

parameters:
  publish:
    type: boolean
    default: false
  # Version bump for upgrade: [major | minor | patch | premajor | preminor | prepatch | prerelease]
  version:
    type: string
    default: "patch"

jobs:
  # Default Job
  build-and-test-linux:
    <<: *defaults
    description: "Lint, Build, Test with Coverage"
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-linux-{{ checksum "yarn.lock" }}

      # Build and Lint
      - run: yarn install --frozen-lockfile
      - run: yarn lint
      - run: yarn test_with_coverage

      # Cache the node_modules folder
      - save_cache:
          key: dependency-cache-linux-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

      # Save the current workspace state for deployment to npm
      - persist_to_workspace:
          root: ~/lightning-language-server
          paths: .

  build-and-test-win:
    description: "Run tests on windows"
    executor: win/default
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-win-{{ checksum "yarn.lock" }}
      # Build
      - run: yarn install --frozen-lockfile
      # Copy linked packages so we can run the tests correctly on windows
      - run:
          name: Setup workspace Symlinks for Windows
          command: yarn windowsCopySymlinks
      - run:
          name: Run tests on windows (Without coverage)
          command: yarn test
      - save_cache:
          key: dependency-cache-win-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

  # Publish to NPM
  publish:
    <<: *defaults
    description: "Publish package to npmjs.org"
    steps:
      - attach_workspace:
          at: ~/lightning-language-server
      # This line has to be here or it won't properly configure git access
      - add_ssh_keys: *ssh-config
      - checkout
      - run: *gh-config
      - run:
          name: Bump package version
          command: |
            yarn bump-versions << pipeline.parameters.version >>
            git add .
            export RELEASE_TAG="$(node -pe "require('./lerna.json').version")"
            git commit -m "Updated version $RELEASE_TAG"
      - run:
          name: Set .npmrc
          command: echo "//registry.npmjs.org/:_authToken=${NPM_PUBLISH_TOKEN}" > ~/.npmrc
      - run: yarn publish-lsp
      - run: git push origin main
      - run:
          name: Tag the release and push to repo
          command: |
            export RELEASE_TAG="$(node -pe "require('./lerna.json').version")"
            git tag v${RELEASE_TAG}
            git push --tags
      - slack/notify:
          channel: "pdt_releases"
          color: "#42e2f4"
          message: "Lightning Language Servers have been published to NPM"

workflows:
  version: 2.1

  commit-workflow:
    unless: << pipeline.parameters.publish >>
    jobs:
      - build-and-test-linux
      - build-and-test-win

  publish-workflow:
    when: << pipeline.parameters.publish >>
    jobs:
      - slack/approval-notification:
          message: Pending Approval for Publish of Lightning Language Server
          channel: 'pdt_releases'
          color: '#0E1111'
      - build-and-test-linux
      - build-and-test-win
      - hold: # Requires manual approval in Circle Ci
          type: approval
      - publish:
          context: pdt-publish-restricted-context
          filters:
            branches:
              only:
                - main
          requires:
            - build-and-test-linux
            - build-and-test-win
            - hold
