name: forcedotcom/lightning-language-server/commit-workflow
on:
  workflow_dispatch:
    inputs:
      publish:
        required: true
      version:
        required: false
        default: minor
jobs:
  build-and-test-linux:
    defaults:
      run:
        working-directory: "~/lightning-language-server"
    runs-on: sfdc-hk-ubuntu-latest
    container:
      image: node:lts
    steps:
    - uses: actions/checkout@v2
    - name: restore_cache
      uses: actions/cache@v2
      with:
        key: dependency-cache-linux-{{ checksum "yarn.lock" }}
        path: node_modules
    - run: yarn install --frozen-lockfile
    - run: yarn lint
    - run: yarn test_with_coverage
    - uses: actions/upload-artifact@v2
      with:
        path: "~/lightning-language-server/."
  build-and-test-win:
    runs-on: sfdc-hk-ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: restore_cache
      uses: actions/cache@v2
      with:
        key: dependency-cache-win-{{ checksum "yarn.lock" }}
        path: node_modules
    - run: yarn install --frozen-lockfile
    - name: Setup workspace Symlinks for Windows
      run: yarn windowsCopySymlinks
    - name: Run tests on windows (Without coverage)
      run: yarn test
  slack_approval-notification:
    if: contains('refs/heads/main', github.ref)
    runs-on: sfdc-hk-ubuntu-latest
    steps:
#     # This item has no matching transformer
#     - circleci_slack_job_approval_notification:
  hold:
    environment:
      name: approval
    if: contains('refs/heads/main', github.ref)
    runs-on: sfdc-hk-ubuntu-latest
    steps:
    - run: echo 'approved'
  publish:
    if: contains('refs/heads/main', github.ref)
    defaults:
      run:
        working-directory: "~/lightning-language-server"
    runs-on: sfdc-hk-ubuntu-latest
    container:
      image: node:lts
    needs:
    - build-and-test-linux
    - build-and-test-win
    - hold
    steps:
    - uses: actions/download-artifact@v2
      with:
        path: "~/lightning-language-server"
    # Ensure parameter if_key_exists is set correctly
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: "${{ secrets.CIRCLE_CI_SSH_KEY }}"
        name: circle_ci_id_rsa
        known_hosts: "${{ secrets.CIRCLE_CI_KNOWN_HOSTS }}"
        if_key_exists: fail
    - uses: actions/checkout@v2
    - name: Configuring GitHub
      run: |-
        git config credential.helper 'cache --timeout=120'
        git config user.email "$GH_EMAIL"
        git config user.name "Release Bot"
    - name: Bump package version
      run: |-
        yarn bump-versions << pipeline.parameters.version >>
        git add .
        export RELEASE_TAG="$(node -pe "require('./lerna.json').version")"
        git commit -m "Updated version $RELEASE_TAG [ci skip]"
    - name: Set .npmrc
      run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
    - run: yarn publish-lsp
    - run: git push origin main
    - name: Tag the release and push to repo
      run: |-
        export RELEASE_TAG="$(node -pe "require('./lerna.json').version")"
        git tag v${RELEASE_TAG}
        git push --tags
    - uses: "./.github/actions/slack_notify"
      continue-on-error: true
      if: always()
      with:
        slack_webhook: "${{ secrets.SLACK_WEBHOOK }}"
        slack_channel: pdt_releases
